.TH XBindKeys 1 "Tue Apr 19 2014"
.UC 1
.SH "NAME"
xbindkeys \- a grabbing keys program for X
.SH "SYNOPSIS"
\fBxbindkeys\fP [ \fIoptions\fP ]
.br
.SH "DESCRIPTION"
\fIXbindKeys\fP is a program that grabs key and mouse button events
in X and starts associated shell commands.

.LP
.SH "COMMAND LINE OPTIONS"
Available command line options are as follows:
.TP
\fB-d, --defaults\fP
Print a default rc file
.TP
\fB-f, --file\fP
Use an alternative rc file
.TP
\fB-h, --help\fP
Short help on options plus version/author info.
.TP
\fB-X, --display\fP
Set X display to use
.TP
\fB-v, --verbose\fP
More information on xbindkeys when it runs

.TP
\fB-k, --key\fP
Identify one key pressed (useful for configuration)

.TP
\fB-mk, --multikey\fP
Identify multi key pressed (useful for configuration)

.TP
\fB-g, --geometry\fP
size and position of window with -k|-mk option

.TP
\fB-n, --nodaemon\fP
don't start as daemon

.TP
\fB-y N, --delay N\fP
Delay N milliseconds before issuing command.

.LP
If guile support has not been disabled:
.TP
\fB-dg, --defaults-guile\fP
Print a default guile configuration file

.TP
\fB-fg, --file-guile\fP
Use an alternative guile configuration file

.SH "XBINDKEYSRC"
XBindKeys default configuration file is at $HOME/.xbindkeysrc,
used only for one user.
.LP
The configuration file consists of commands in double quotes,
and associated keys in the next line.
.LP
Comments are started with a pound (#) and extend to the end of the line.
.LP
You can see a default configuration with --defaults
.LP
.fi

.SH "KEYSYMS"
The program expects combinations of keysyms to be used by using plus (+)
characters to combine them together.
.LP
The format of a command line is:
.nf
    "command to start &"
.nf
       associated key
.LP
or, if using a condition (described below)
.nf
    "command to start &"
.nf
    %condition type target
.nf
       associated key
.LP
.fi
To specify an associated key, you can use `xbindkeys --key` or
 `xbindkeys --multikey` and put one of the two lines in the
configuration file.
.LP
A list of keys is in /usr/include/X11/keysym.h and in
/usr/include/X11/keysymdef.h.
The XK_ is not needed.
.LP
List of modifiers:
.nf
    Release, Control, Shift, Mod1 (Alt), Mod2 (NumLock),
.nf
    Mod3 (CapsLock), Mod4, Mod5 (Scroll).
.LP
.fi
The release modifier is not a standard X modifier, but you can
use it if you want to catch release events instead of press events.
Modifiers are not case sensitive.
.LP
By defaults, xbindkeys does not pay attention to the modifiers
NumLock, CapsLock and ScrollLock.
Add the lines below in the configuration file if you want to pay
attention to them.
.LP
    keystate_numlock = enable
.nf
    keystate_capslock = enable
.nf
    keystate_scrolllock= enable

.SH "USE OF DELAY"
A key can be changed by invoking \fIxdotool\fP as the command.
However, for this to work a small delay is often required before running
the command, otherwise the \fIxbindkeys\fP program sees the key.
The delay can be added in the control file with a line such as
.br
    delay = \fINNN\fP
.br
where \fINNN\fP is the number of milliseconds to delay.  A value of
100 is often sufficient if the key is released quickly afterwards.

The -y (or --delay) option can be used to test various values if the
delay line is not used.

.SH "CONDITIONS"
.LP
A condition line has the format
.nf
    %qualifier type target1
.fi    
and if present appears between the command line and the associated key line.
.PP
The \fIqualifier\fP is either WHEN or EXCLUDE.

The \fItype\fP is used to derive a string from the window where the event originated from.
The derived string is:
.nf
* the window name (WM_NAME property) if \fItype\fP is \fBNAME\fP;
.nf
* the window class (WM_CLASS property) if \fItype\fP is \fBCLASS\fP;
.nf
* the window's command (WM_COMMAND property) if \fItype\fP is \fBCOMMAND\fP.
.fi

The \fItarget\fP is an extended regexp (in the style of egrep).

The condition is true if
.nf
* the qualifier is \fBWHEN\fP and there is a match, or
.nf
* the qualifier is \fBEXCLUDE\fP and there is no match.
.fi

If the condition is true then the comand is executed.
.SH "WHEN THE CONDITION IS FALSE"
The behaviour when the condition evalues to false is controlled
by the presence of either of these lines in the rc file:
.in +4n
fallback = discard
.nf
fallback = pass
.in
Specifying \fBdiscard\fP means the event is ignored.
.nf
Specifying \fBpass\fP means the event is passed to the window as normal
(as if xkeybindings was not in effect).

The default is \fBdiscard\fP.
.SS Caution When Using Pass
Specifying fallback = pass causes a synchronous grab on the keyboard and mouse
(as opposed to an asynchrous grab when using discard).  Attempts to debug such a program
may lead to the keyboard or pointer being locked up.
.SH "EXAMPLES"
.LP
# control+shift+q starts xterm
.nf
"xterm"
.nf
  control+shift + q
.LP
# Menu key starts xbindkeys_show
.nf
"xbindkeys_show"
.nf
  Menu
.LP
# Control + mouse button 1 starts xterm
.nf
"xterm"
.nf
  Control + b:1
.LP
# Control+Shift+a  release event starts rxvt
.nf
"rxvt"
.nf
  release+control+shift + a
.LP
# Control + mouse button 2 release event starts rxvt
.nf
"rxvt"
.nf
  Control + b:2 + Release
.PP
# Use xtodotool to turn control-b into a Left key in a firefox window.
.nf
"xdotool key Left"
.nf
%WHEN FILE firefox
.nf
    control + b

.fi
.SH "SCHEME CONFIGURATION STYLE"
A scheme configuration can be used if guile support has not been disabled.
The standard configuration is loaded only if the scheme configuration is not
available.
.LP
For more details, please see here
.nf
  http://www.gnu.org/software/guile/guile.html
.LP
\fBNote: The guile configuration file is prefered for non trivial
configurations, for example double click, timed click or key combinations.\fP
.LP
The default location is ~/.xbindkeysrc.scm

.LP
Use xbindkeys --defaults-guile for more details.
.LP
And xbindkeys --defaults-guile > ~/.xbindkeysrc.scm to use this method.

.SH "NOTE"
xbindkeys reloads the configuration file if modified.
Send a HUP signal to force reloading:
.LP
killall -HUP xbindkeys
.LP
When a HUP signal is sent to xbindkeys, changes take effect only after
moving the mouse.

.SH "BUGS"
If you find a bug, please send mail to <xbindkeys-devel@nongnu.org>
.LP
.SH "HOMEPAGE"
.nf
http://www.nongnu.org/xbindkeys/
.fi

.LP
.SH "AUTHOR"
Philippe Brochard <hocwp@free.fr>
.nf
Marcello Mathias Herreshoff for guile support <marcello@hummer.stanford.edu>

.LP
.SH "FILES"
.nf
$HOME/.xbindkeysrc
        The users configuration file.
.LP
$HOME/.xbindkeysrc.scm
        The users configuration file in scheme
        (if guile support has not been disabled).
.fi

.LP
.SH "SEE ALSO"
.nf

\fBxbindkeys_show\fP
    Utility for showing the actual keybinding with xbindkeys
\fBxmodmap(1x)\fP
    Utility for modifying keymap & button mappings in X.
\fBxev(1x)\fP
    Print contents of X events.
\fB/usr/include/X11/keysymdef.h\fP
    X11 KeySym definitions.

